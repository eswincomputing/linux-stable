// SPDX-License-Identifier: GPL-2.0
/*
 * ESWIN AI driver
 *
 * Copyright 2024, Beijing ESWIN Computing Technology Co., Ltd.. All rights reserved.
 * SPDX-License-Identifier: GPL-2.0
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 * Authors: Lu XiangFeng <luxiangfeng@eswincomputing.com>
 */

#ifndef __PDP_REGS_H__
#define __PDP_REGS_H__

#if !defined(__KERNEL__)
#define OFFSET_ADDRESS_NPU_NVDLA 0x150000
#ifndef _MK_ADDR_CONST
#define _MK_ADDR_CONST(_constant_) (OFFSET_ADDRESS_NPU_NVDLA + _constant_)
#endif

#define PDP_S_POINTER_0_PRODUCER_SHIFT (_MK_SHIFT_CONST(0))
#define PDP_S_POINTER_0 (_MK_ADDR_CONST(0xd004))
#define PDP_RDMA_S_POINTER_0 (_MK_ADDR_CONST(0xc004))

#define PDP_RDMA_D_DATA_CUBE_IN_WIDTH_0 (_MK_ADDR_CONST(0xc00c))
#define PDP_RDMA_D_DATA_CUBE_IN_HEIGHT_0 (_MK_ADDR_CONST(0xc010))
#define PDP_RDMA_D_DATA_CUBE_IN_CHANNEL_0 (_MK_ADDR_CONST(0xc014))
#define PDP_RDMA_D_SRC_BASE_ADDR_HIGH_0 (_MK_ADDR_CONST(0xc020))
#define PDP_RDMA_D_SRC_BASE_ADDR_LOW_0 (_MK_ADDR_CONST(0xc01c))
#define PDP_RDMA_D_SRC_LINE_STRIDE_0 (_MK_ADDR_CONST(0xc024))
#define PDP_RDMA_D_SRC_SURFACE_STRIDE_0 (_MK_ADDR_CONST(0xc028))
#define PDP_RDMA_D_DATA_FORMAT_0 (_MK_ADDR_CONST(0xc030))
#define PDP_RDMA_D_SRC_RAM_CFG_0 (_MK_ADDR_CONST(0xc02c))
#define PDP_RDMA_D_OPERATION_MODE_CFG_0 (_MK_ADDR_CONST(0xc034))
#define PDP_RDMA_D_POOLING_KERNEL_CFG_0 (_MK_ADDR_CONST(0xc038))
#define PDP_RDMA_D_POOLING_PADDING_CFG_0 (_MK_ADDR_CONST(0xc03c))
#define PDP_RDMA_D_PARTIAL_WIDTH_IN_0 (_MK_ADDR_CONST(0xc040))

#define PDP_D_DATA_CUBE_IN_WIDTH_0 (_MK_ADDR_CONST(0xd00c))
#define PDP_D_DATA_CUBE_IN_HEIGHT_0 (_MK_ADDR_CONST(0xd010))
#define PDP_D_DATA_CUBE_IN_CHANNEL_0 (_MK_ADDR_CONST(0xd014))
#define PDP_D_DATA_CUBE_OUT_WIDTH_0 (_MK_ADDR_CONST(0xd018))
#define PDP_D_DATA_CUBE_OUT_HEIGHT_0 (_MK_ADDR_CONST(0xd01c))
#define PDP_D_DATA_CUBE_OUT_CHANNEL_0 (_MK_ADDR_CONST(0xd020))
#define PDP_D_OPERATION_MODE_CFG_0 (_MK_ADDR_CONST(0xd024))
#define PDP_D_PARTIAL_WIDTH_IN_0 (_MK_ADDR_CONST(0xd02c))
#define PDP_D_PARTIAL_WIDTH_OUT_0 (_MK_ADDR_CONST(0xd030))
#define PDP_D_POOLING_KERNEL_CFG_0 (_MK_ADDR_CONST(0xd034))
#define PDP_D_RECIP_KERNEL_WIDTH_0 (_MK_ADDR_CONST(0xd038))
#define PDP_D_RECIP_KERNEL_HEIGHT_0 (_MK_ADDR_CONST(0xd03c))
#define PDP_D_POOLING_PADDING_CFG_0 (_MK_ADDR_CONST(0xd040))
#define PDP_D_POOLING_PADDING_VALUE_1_CFG_0 (_MK_ADDR_CONST(0xd044))
#define PDP_D_POOLING_PADDING_VALUE_2_CFG_0 (_MK_ADDR_CONST(0xd048))
#define PDP_D_POOLING_PADDING_VALUE_3_CFG_0 (_MK_ADDR_CONST(0xd04c))
#define PDP_D_POOLING_PADDING_VALUE_4_CFG_0 (_MK_ADDR_CONST(0xd050))
#define PDP_D_POOLING_PADDING_VALUE_5_CFG_0 (_MK_ADDR_CONST(0xd054))
#define PDP_D_POOLING_PADDING_VALUE_6_CFG_0 (_MK_ADDR_CONST(0xd058))
#define PDP_D_POOLING_PADDING_VALUE_7_CFG_0 (_MK_ADDR_CONST(0xd05c))

#define PDP_D_SRC_LINE_STRIDE_0 (_MK_ADDR_CONST(0xd068))
#define PDP_D_SRC_SURFACE_STRIDE_0 (_MK_ADDR_CONST(0xd06c))
#define PDP_D_DST_LINE_STRIDE_0 (_MK_ADDR_CONST(0xd078))
#define PDP_D_DST_SURFACE_STRIDE_0 (_MK_ADDR_CONST(0xd07c))
#define PDP_D_DST_RAM_CFG_0 (_MK_ADDR_CONST(0xd080))
#define PDP_D_DATA_FORMAT_0 (_MK_ADDR_CONST(0xd084))

#define PDP_RDMA_D_OP_ENABLE_0 (_MK_ADDR_CONST(0xc008))
#define PDP_D_OP_ENABLE_0 (_MK_ADDR_CONST(0xd008))
#endif

/*reg index*/
enum {
    D_DATA_CUBE_IN_WIDTH,
    D_DATA_CUBE_IN_HEIGHT,
    D_DATA_CUBE_IN_CHANNEL,
    D_DATA_CUBE_OUT_WIDTH,
    D_DATA_CUBE_OUT_HEIGHT,
    D_DATA_CUBE_OUT_CHANNEL,
    D_OPERATION_MODE_CFG,
    D_PARTIAL_WIDTH_IN,
    D_PARTIAL_WIDTH_OUT,
    D_POOLING_KERNEL_CFG,
    D_RECIP_KERNEL_WIDTH,
    D_RECIP_KERNEL_HEIGHT,
    D_POOLING_PADDING_CFG,
    D_POOLING_PADDING_VALUE_1_CFG,
    D_POOLING_PADDING_VALUE_2_CFG,
    D_POOLING_PADDING_VALUE_3_CFG,
    D_POOLING_PADDING_VALUE_4_CFG,
    D_POOLING_PADDING_VALUE_5_CFG,
    D_POOLING_PADDING_VALUE_6_CFG,
    D_POOLING_PADDING_VALUE_7_CFG,
    D_SRC_LINE_STRIDE,
    D_SRC_SURFACE_STRIDE,
    D_PDP_DST_LINE_STRIDE,
    D_PDP_DST_SURFACE_STRIDE,
    D_PDP_DATA_FORMAT,
    PDP_REG_MAX,
};

// pdp_rdma

enum {
    R_DATA_CUBE_IN_WIDTH,
    R_DATA_CUBE_IN_HEIGHT,
    R_DATA_CUBE_IN_CHANNEL,
    R_SRC_BASE_ADDR_HIGH,
    R_SRC_BASE_ADDR_LOW,
    R_SRC_LINE_STRIDE,
    R_SRC_SURFACE_STRIDE,
    R_DATA_FORMAT,
    R_SRC_RAM_CFG,
    R_OPERATION_MODE_CFG,
    R_POOLING_KERNEL_CFG,
    R_POOLING_PADDING_CFG,
    R_PARTIAL_WIDTH_IN,
    PDP_RDMA_REG_MAX,
};

enum {
    R_PDP_DRP_G_STRIDE_SRAM,
    R_PDP_DRP_N_STRIDE_SRAM,
    R_PDP_DRP_H_STRIDE_SRAM,
    R_PDP_DRP_C_STRIDE_SRAM,
    R_PDP_DRP_W_EXT_STRIDE,
    R_PDP_DRP_LAYER_PARA_L,
    R_PDP_DRP_LAYER_PARA_H,
    R_PDP_DRP_OMAP_PARA_L,
    R_PDP_DRP_CTRL,
    R_PDP_DRP_SPLIT,
    R_PDP_DRP_PARTIAL_WIDTH,
    R_PDP_DRP_SRAM_LOOP_PARA_H,
    R_PDP_DRP_SRAM_LOOP_PARA_L,
    R_PDP_POST_BASE_ADDR_H,
    R_PDP_POST_BASE_ADDR_L,
    D_PDP_POST_DRP_ENABLE,
    PDP_DRP_REG_MAX,
};

#endif
