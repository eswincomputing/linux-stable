// SPDX-License-Identifier: GPL-2.0
/*
 * ESWIN PCIe root complex driver
 *
 * Copyright 2024, Beijing ESWIN Computing Technology Co., Ltd.. All rights reserved.
 * SPDX-License-Identifier: GPL-2.0
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 * Authors: Lu XiangFeng <luxiangfeng@eswincomputing.com>
 */

#ifndef __SDP_H_
#define __SDP_H_
#include "opendla_initial.h"
#include "post_drp.h"
#include "reg_index.h"

u32 sdp_bit_to_reg[SDP_REG_MAX] = {
	[D_DATA_CUBE_WIDTH] = SDP_D_DATA_CUBE_WIDTH_0,
	[D_DATA_CUBE_HEIGHT] = SDP_D_DATA_CUBE_HEIGHT_0,
	[D_DATA_CUBE_CHANNEL] = SDP_D_DATA_CUBE_CHANNEL_0,
	[D_DST_BASE_ADDR_HIGH] = SDP_D_DST_BASE_ADDR_HIGH_0,
	[D_DST_BASE_ADDR_LOW] = SDP_D_DST_BASE_ADDR_LOW_0,
	[D_DST_LINE_STRIDE] = SDP_D_DST_LINE_STRIDE_0,
	[D_DST_SURFACE_STRIDE] = SDP_D_DST_SURFACE_STRIDE_0,
	[D_DP_BS_CFG] = SDP_D_DP_BS_CFG_0,
	[D_DP_BS_ALU_CFG] = SDP_D_DP_BS_ALU_CFG_0,
	[D_DP_BS_ALU_SRC_VALUE] = SDP_D_DP_BS_ALU_SRC_VALUE_0,
	[D_DP_BS_MUL_SRC_VALUE] = SDP_D_DP_BS_MUL_SRC_VALUE_0,
	[D_DP_BS_MUL_CFG] = SDP_D_DP_BS_MUL_CFG_0,
	[D_DP_BN_CFG] = SDP_D_DP_BN_CFG_0,
	[D_DP_BN_ALU_CFG] = SDP_D_DP_BN_ALU_CFG_0,
	[D_DP_BN_ALU_SRC_VALUE] = SDP_D_DP_BN_ALU_SRC_VALUE_0,
	[D_DP_BN_MUL_SRC_VALUE] = SDP_D_DP_BN_MUL_SRC_VALUE_0,
	[D_DP_BN_MUL_CFG] = SDP_D_DP_BN_MUL_CFG_0,
	[D_DP_EW_CFG] = SDP_D_DP_EW_CFG_0,
	[D_DP_EW_ALU_CFG] = SDP_D_DP_EW_ALU_CFG_0,
	[D_DP_EW_ALU_SRC_VALUE] = SDP_D_DP_EW_ALU_SRC_VALUE_0,
	[D_DP_EW_ALU_CVT_OFFSET_VALUE] = SDP_D_DP_EW_ALU_CVT_OFFSET_VALUE_0,
	[D_DP_EW_ALU_CVT_SCALE_VALUE] = SDP_D_DP_EW_ALU_CVT_SCALE_VALUE_0,
	[D_DP_EW_ALU_CVT_TRUNCATE_VALUE] = SDP_D_DP_EW_ALU_CVT_TRUNCATE_VALUE_0,
	[D_DP_EW_MUL_CFG] = SDP_D_DP_EW_MUL_CFG_0,
	[D_DP_EW_MUL_SRC_VALUE] = SDP_D_DP_EW_MUL_SRC_VALUE_0,
	[D_DP_EW_MUL_CVT_OFFSET_VALUE] = SDP_D_DP_EW_MUL_CVT_OFFSET_VALUE_0,
	[D_DP_EW_MUL_CVT_SCALE_VALUE] = SDP_D_DP_EW_MUL_CVT_SCALE_VALUE_0,
	[D_DP_EW_MUL_CVT_TRUNCATE_VALUE] = SDP_D_DP_EW_MUL_CVT_TRUNCATE_VALUE_0,
	[D_DP_EW_TRUNCATE_VALUE] = SDP_D_DP_EW_TRUNCATE_VALUE_0,
	[D_FEATURE_MODE_CFG] = SDP_D_FEATURE_MODE_CFG_0,
	[D_DST_BATCH_STRIDE] = SDP_D_DST_BATCH_STRIDE_0,
	[D_DATA_FORMAT] = SDP_D_DATA_FORMAT_0,
	[D_CVT_OFFSET] = SDP_D_CVT_OFFSET_0,
	[D_CVT_SCALE] = SDP_D_CVT_SCALE_0,
	[D_CVT_SHIFT] = SDP_D_CVT_SHIFT_0,

	//15 regs for sdp_post_drp
	[DRP_D_REG_G_STRIDE_SRAM] = POST_DRP_D_REG_G_STRIDE_SRAM,
	[DRP_D_REG_N_STRIDE_SRAM] = POST_DRP_D_REG_N_STRIDE_SRAM,
	[DRP_D_REG_H_STRIDE_SRAM] = POST_DRP_D_REG_H_STRIDE_SRAM,
	[DRP_D_REG_C_STRIDE_SRAM] = POST_DRP_D_REG_C_STRIDE_SRAM,
	[DRP_D_REG_W_EXT_STRIDE] = POST_DRP_D_REG_H_EXT_STRIDE,
	[DRP_D_REG_LAYER_PARA_L] = POST_DRP_D_REG_LAYER_PARA_L,
	[DRP_D_REG_LAYER_PARA_H] = POST_DRP_D_REG_LAYER_PARA_H,
	[DRP_D_REG_OMAP_PARA_L] = POST_DRP_D_REG_OMAP_PARA_L,
	[DRP_D_REG_CTRL] = POST_DRP_D_REG_CTRL,
	[DRP_D_REG_SPLIT] = POST_DRP_D_REG_SPLIT,
	[DRP_D_REG_PARTIAL_WIDTH] = POST_DRP_D_REG_PARTIAL_WIDTH,
	[DRP_D_REG_SRAM_LOOP_PARA_H] = POST_DRP_D_REG_SRAM_LOOP_PARA_H,
	[DRP_D_REG_SRAM_LOOP_PARA_L] = POST_DRP_D_REG_SRAM_LOOP_PARA_L,
	[DRP_D_REG_BASE_ADDR_H] = POST_DRP_D_REG_BASE_ADDR_H,
	[DRP_D_REG_BASE_ADDR_L] = POST_DRP_D_REG_BASE_ADDR_L,
};

u32 sdp_rdma_bit_to_reg[SDP_RDMA_REG_MAX] = {
	[SDP_RDMA_D_DATA_CUBE_WIDTH] = SDP_RDMA_D_DATA_CUBE_WIDTH_0,
	[SDP_RDMA_D_DATA_CUBE_HEIGH] = SDP_RDMA_D_DATA_CUBE_HEIGHT_0,
	[SDP_RDMA_D_DATA_CUBE_CHANNEL] = SDP_RDMA_D_DATA_CUBE_CHANNEL_0,
	[SDP_RDMA_D_SRC_BASE_ADDR_LOW] = SDP_RDMA_D_SRC_BASE_ADDR_LOW_0,
	[SDP_RDMA_D_SRC_BASE_ADDR_HIGH] = SDP_RDMA_D_SRC_BASE_ADDR_HIGH_0,
	[SDP_RDMA_D_SRC_LINE_STRIDE] = SDP_RDMA_D_SRC_LINE_STRIDE_0,
	[SDP_RDMA_D_SRC_SURFACE_STRIDE] = SDP_RDMA_D_SRC_SURFACE_STRIDE_0,
	[SDP_RDMA_D_BRDMA_CFG] = SDP_RDMA_D_BRDMA_CFG_0,
	[SDP_RDMA_D_BS_BASE_ADDR_LOW] = SDP_RDMA_D_BS_BASE_ADDR_LOW_0,
	[SDP_RDMA_D_BS_BASE_ADDR_HIGH] = SDP_RDMA_D_BS_BASE_ADDR_HIGH_0,
	[SDP_RDMA_D_BS_LINE_STRIDE] = SDP_RDMA_D_BS_LINE_STRIDE_0,
	[SDP_RDMA_D_BS_SURFACE_STRIDE] = SDP_RDMA_D_BS_SURFACE_STRIDE_0,
	[SDP_RDMA_D_BS_BATCH_STRIDE] = SDP_RDMA_D_BS_BATCH_STRIDE_0,
	[SDP_RDMA_D_BN_BASE_ADDR_LOW] = SDP_RDMA_D_BN_BASE_ADDR_LOW_0,
	[SDP_RDMA_D_BN_BASE_ADDR_HIGH] = SDP_RDMA_D_BN_BASE_ADDR_HIGH_0,
	[SDP_RDMA_D_BN_LINE_STRIDE] = SDP_RDMA_D_BN_LINE_STRIDE_0,
	[SDP_RDMA_D_BN_SURFACE_STRIDE] = SDP_RDMA_D_BN_SURFACE_STRIDE_0,
	[SDP_RDMA_D_BN_BATCH_STRIDE] = SDP_RDMA_D_BN_BATCH_STRIDE_0,
	[SDP_RDMA_D_ERDMA_CFG] = SDP_RDMA_D_ERDMA_CFG_0,
	[SDP_RDMA_D_EW_BASE_ADDR_LOW] = SDP_RDMA_D_EW_BASE_ADDR_LOW_0,
	[SDP_RDMA_D_EW_BASE_ADDR_HIGH] = SDP_RDMA_D_EW_BASE_ADDR_HIGH_0,
	[SDP_RDMA_D_EW_LINE_STRIDE] = SDP_RDMA_D_EW_LINE_STRIDE_0,
	[SDP_RDMA_D_EW_SURFACE_STRIDE] = SDP_RDMA_D_EW_SURFACE_STRIDE_0,
	[SDP_RDMA_D_EW_BATCH_STRIDE] = SDP_RDMA_D_EW_BATCH_STRIDE_0,
	[SDP_RDMA_D_FEATURE_MODE_CFG] = SDP_RDMA_D_FEATURE_MODE_CFG_0,
	[SDP_RDMA_D_SRC_DMA_CFG] = SDP_RDMA_D_SRC_DMA_CFG_0,
};

#endif
